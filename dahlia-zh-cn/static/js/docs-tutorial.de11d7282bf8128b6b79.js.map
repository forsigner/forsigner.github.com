{"version":3,"sources":["webpack:///./docs/tutorial.mdx"],"names":["MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName","className","href"],"mappings":"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","file":"static/js/docs-tutorial.9d155a5c.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"api\"}}>{`API`}</MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`const { consume, mutate, getState } = createStore(initialState)`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`使用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`createStore()`}</MDXTag>{` 创建一个 store 示例，使用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`consume`}</MDXTag>{` 访问 state，使用 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`mutate`}</MDXTag>{` 更新 state。建议使用多 Store \b来管理的项目。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`\b\b实际项目中 store 文件推荐这样组织:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`import { createStore } from 'stamen'\n\nconst { consume, mutate } = createStore({ count: 1 })\n\nconst actions = {\n  increment() {\n    mutate(state => state.count++)\n  },\n  decrement() {\n    mutate(state => state.count--)\n  },\n  asyncIncrement() {\n    setTimeout(() => {\n      mutate(state => {\n        state.count++\n      })\n    }, 1000)\n  },\n  async asyncDecrement() {\n    await new Promise((resolve, _) => {\n      setTimeout(() => {\n        resolve()\n      }, 1000)\n    })\n    mutate(state => state.count--)\n  },\n}\n\nexport { consume, mutate, actions }\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`建议 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`state`}</MDXTag>{` 和 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`actions`}</MDXTag>{` 放在一个文件内, 尽量让每个 store \b简单，如果以 store 太复杂\b的话，建议拆成多个 store。`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"consume\"}}><MDXTag name=\"inlineCode\" components={components} parentName=\"h2\">{`consume()`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`在组件内使用 state, state 改变后组件回自动 re-render。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`首先，你需要新建一个 store，例如:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`const { consume, mutate } = createStore({\n  count: 1,\n  info: {\n    name: 'Counter',\n  },\n})\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`简单用法`}</MDXTag></MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`<span>{consume(state => state.count)}</span>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`使用selector`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`使用selector能获得的更好的性能，能减少组件重复渲染，推荐多使用 selector.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`<span>{consume(state => state.info.name, name => name)}</span>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"mutate\"}}><MDXTag name=\"inlineCode\" components={components} parentName=\"h2\">{`mutate()`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Action 是一个内部调用了 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`mutate()`}</MDXTag>{` 的普通函数, 你可以在任意地方调用 action: stateless 组件内、React 生命周期函数内、甚至在组件外，所以你并不需要类似 connect 或者 inject 这样的 HOC。`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`State 是 immutable 的, 但你能使用 mutable 方式 `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`mutate`}</MDXTag>{` 来生成新的，在处理复杂 store 时非常重要，这是`}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/mweststrate/immer\"}}>{`immer`}</MDXTag>{` 的强大之处，多亏 immer。`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`function increment() {\n  mutate(state => {\n    state.count++\n  })\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"getstate\"}}><MDXTag name=\"inlineCode\" components={components} parentName=\"h2\">{`getState()`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`获取当前的 state`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-js\"}}>{`const { getState } = createStore({ count: 1 })\nconst currentState = getState()\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}